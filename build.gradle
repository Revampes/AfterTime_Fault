// For those who want the bleeding edge
buildscript {
    repositories {
        // jcenter() removed due to deprecation / method missing on newer Gradle
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        // Removed kotlin-gradle-plugin due to Gradle version incompatibility
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

def getVersionFromFile() {
    def versionFile = file('version.txt')
    if (versionFile.exists()) {
        return versionFile.text.trim()
    } else {
        return '0.1' // fallback version
    }
}

version = getVersionFromFile()
group= "com.aftertime.ratallofyou"
archivesBaseName = "ratallofyou"

// Add Java 8 compatibility here
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"

    mappings = "stable_20"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

// Rest of your build.gradle remains the same...
task copyMod(type: Copy) {
    from("$buildDir/libs/${archivesBaseName}-${version}.jar")
    into "C:\\Users\\user\\AppData\\Roaming\\PrismLauncher\\instances\\1.8.9(1)\\minecraft\\mods"
}

build.finalizedBy copyMod

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes(
                "ModSide": "CLIENT",
                "TweakOrder": "0",
                "ForceLoadAsMod": true,
        )
    }
}

repositories {
    mavenCentral()
    // Removed jcenter()
}

// Removed Kotlin stdlib dependency and kotlin compile task configuration
// All Kotlin sources are currently ignored by the build (no plugin).

task bumpVersion(type: Exec) {
    description = 'Bump version in version.txt based on latest commit message.'
    group = 'versioning'
    // Compile VersionBumper.java if needed
    doFirst {
        def src = "src/main/java/com/aftertime/ratallofyou/VersionBumper.java"
        def outDir = "build/versionBumper"
        mkdir outDir
        exec {
            commandLine 'javac', '-d', outDir, src
        }
    }
    // Run VersionBumper
    commandLine 'java', '-cp', 'build/versionBumper', 'com.aftertime.ratallofyou.VersionBumper'
}

// Ensure bumpVersion runs before build
build.dependsOn bumpVersion

def generatedSrcRoot = "$buildDir/generated/sources/version"
def generatedPkgDir = "$generatedSrcRoot/com/aftertime/ratallofyou"
task generateVersionInfo {
    description = 'Generate VersionInfo.java with the current version.'
    doLast {
        def dir = file(generatedPkgDir)
        dir.mkdirs()
        def versionInfoFile = new File(dir, 'VersionInfo.java')
        versionInfoFile.text = """
package com.aftertime.ratallofyou;

public class VersionInfo {
    public static final String VERSION = \"${version}\";
}
"""
    }
}

compileJava.dependsOn generateVersionInfo
sourceSets.main.java.srcDirs += generatedSrcRoot
